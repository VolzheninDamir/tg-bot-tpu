from telebot import types
from services.wikipedia_service import search_wikipedia
from keyboards import get_main_keyboard

def setup_wikipedia_handlers(bot, user_state):
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏
    @bot.message_handler(func=lambda message: message.text.strip() == '–ü–æ–∏—Å–∫ –≤ –í–∏–∫–∏–ø–µ–¥–∏–∏')
    def handle_wiki_button(message: types.Message):
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
        if message.chat.id not in user_state:
            user_state[message.chat.id] = {}
            
        user_state[message.chat.id]['mode'] = 'wiki_query'
        bot.send_message(
            message.chat.id,
            "üîç –í–≤–µ–¥–∏—Ç–µ –≤–∞—à –∑–∞–ø—Ä–æ—Å –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤ –í–∏–∫–∏–ø–µ–¥–∏–∏:",
            reply_markup=types.ReplyKeyboardRemove()
        )
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–ø—Ä–æ—Å–∞
    @bot.message_handler(func=lambda message: 
        message.chat.id in user_state and 
        user_state[message.chat.id].get('mode') == 'wiki_query')
    def process_wiki_query(message: types.Message):
        query = message.text.strip()
        
        if not query:
            bot.send_message(message.chat.id, "–ó–∞–ø—Ä–æ—Å –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º.", reply_markup=get_main_keyboard())
            user_state.pop(message.chat.id, None)
            return
        
        bot.send_chat_action(message.chat.id, 'typing')
        summary, url = search_wikipedia(query)
        
        response = "üìö –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞:\n\n"
        if summary:
            response += f"{summary}"
            if url:
                response += f"\n\nüåê –ü–æ–¥—Ä–æ–±–Ω–µ–µ: {url}"
        else:
            response = "‚ùå –ü–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ."
        
        bot.send_message(
            message.chat.id,
            response,
            reply_markup=get_main_keyboard(),
            disable_web_page_preview=True
        )
        user_state.pop(message.chat.id, None)